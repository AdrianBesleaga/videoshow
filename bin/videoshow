#!/usr/bin/env node

var fs = require('fs')
var videoshow = require('../')
var version = require('../package.json').version

var yargs = require('yargs')
var argv = yargs
  .usage('Create video slides easily from images with audio, subtitles and transitions\nUsage: $0 [options]')
  .example('$0 -c config.json --audio song.mp3', '')
  .help('help').alias('help', 'h')
  .version(version)
  .alias('v', 'version')
  .options({
    config: {
      alias: 'c',
      description: 'File path to JSON config file',
      required: true
    },
    audio: {
      alias: 'a',
      description: 'Optional audio file path'
    },
    input: {
      alias: 'i',
      description: 'Add additional input to video'
    },
    output: {
      alias: 'o',
      description: 'Output video file path'
    },
    debug: {
      alias: 'd',
      description: 'Enable debug mode in error case'
    }
  })
  .argv

try {
  render(options())
} catch (e) {
  error(e)
}

function render(opts) {
  var output = opts.output || argv.output || getOutput()
  var audio = opts.audio || argv.audio

  var video = videoshow(opts.images, opts.params)
  if (audio) video.audio(audio)

  video
    .save(output)
    .on('error', error)
    .on('end', function () {
      echo('Video created:', output)
    })
}

function getOutput() {
  var output = argv._.pop()
  if (output && output[0] !== '-') {
    return output
  }
  return 'video.mp4'
}

function options() {
  var opts = {}
  var config = JSON.parse(fs.readFileSync(argv.config))
  if (config && config.options) {
    opts = config
  }
  return opts
}

function error(msg) {
  if (argv.debug && msg.stack) {
    console.error(msg.stack)
  } else {
    console.error(msg.message ||Â msg)
  }
  process.exitCode = 1
}

function echo() {
  console.log.apply(console, arguments)
}
